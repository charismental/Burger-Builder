{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Modal/Modal.module.css","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","BuildControl","Label","Less","More","BuildControls","OrderButton","enable","Button","Success","Danger","content","Burger","Backdrop","Modal","layout","props","react_default","a","createElement","react","className","classes","children","BurgerIngredient","ingredient","this","type","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","onClick","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","backdrop","show","clicked","modal","modalClosed","style","transform","opacity","button","btnType","join","orderSummary","ingredientSummary","textTransform","totalPrice","cancel","continue","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","purchasing","addIngredientHandler","updatedCount","_this","updatedIngredients","objectSpread","priceAddition","newPrice","setState","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","confirm","sum","disabledInfo","OrderSummary","App","Layout","containers_BurgerBuilder_BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac2609f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__FR-Pl\",\"BreadTop\":\"BurgerIngredient_BreadTop__3LOGD\",\"Seeds1\":\"BurgerIngredient_Seeds1__34WYY\",\"Seeds2\":\"BurgerIngredient_Seeds2__JA0-m\",\"Meat\":\"BurgerIngredient_Meat__1i2Um\",\"Cheese\":\"BurgerIngredient_Cheese__1Pp4p\",\"Salad\":\"BurgerIngredient_Salad__2Ij1N\",\"Bacon\":\"BurgerIngredient_Bacon__15huI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__UzvJ1\",\"Label\":\"BuildControl_Label__3F-da\",\"Less\":\"BuildControl_Less__OvclC\",\"More\":\"BuildControl_More__2YuxP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2aSyw\",\"OrderButton\":\"BuildControls_OrderButton__IGWdp\",\"enable\":\"BuildControls_enable__Llp6N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1zbr6\",\"Success\":\"Button_Success__CUk0a\",\"Danger\":\"Button_Danger__2OX2u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__3SU8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__24kgE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__13LWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2MAsc\"};","import React, { Fragment } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\n\r\nconst layout = ( props ) => (\r\n    <Fragment>\r\n        <div>Toolbar, SideDrawer, Backdrop</div>\r\n        <main className={classes.content}>\r\n            {props.children}\r\n        </main>\r\n    </Fragment>\r\n);\r\n\r\nexport default layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n               return <BurgerIngredient key={igKey + i} type={igKey} />\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button\r\n            className={classes.Less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>Less</button>\r\n        <button\r\n            className={classes.More}\r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type:'salad' },\r\n    { label: 'Bacon', type:'bacon' },\r\n    { label: 'Cheese', type:'cheese' },\r\n    { label: 'Meat', type:'meat' }\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React, { Fragment } from 'react';\r\n\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport classes from './Modal.module.css';\r\n\r\nconst modal = (props) => (\r\n    <Fragment>\r\n        <Backdrop clicked={props.modalClosed} show={props.show} />\r\n        <div\r\n            className={classes.Modal}\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1': '0'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nexport default modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Fragment } from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return (\r\n                <li key={igKey}>\r\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n                </li>\r\n            );\r\n        });\r\n    return (\r\n        <Fragment>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p>Total Price: <strong>${props.totalPrice}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button clicked={props.cancel} btnType=\"Danger\">CANCEL</Button>\r\n            <Button clicked={props.continue} btnType=\"Success\">CONTINUE</Button>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default orderSummary;","import React, { Component, Fragment } from 'react';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        purchasable: false,\r\n        purchasing: false,\r\n        totalPrice: 4\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        this.setState({purchasable: sum > 0})\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }; \r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }; \r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n       // eslint-disable-next-line no-restricted-globals\r\n       if (confirm('You sure?')) {\r\n           this.purchaseCancelHandler();\r\n       } else {\r\n           this.purchaseCancelHandler();\r\n       }\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <Modal\r\n                    show={this.state.purchasing}\r\n                    modalClosed={this.purchaseCancelHandler}>\r\n                    <OrderSummary\r\n                        totalPrice={this.state.totalPrice.toFixed(2)}\r\n                        ingredients={this.state.ingredients}\r\n                        continue={this.purchaseContinueHandler}\r\n                        cancel={this.purchaseCancelHandler} />\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls\r\n                    price={this.state.totalPrice}\r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                    purchasable={this.state.purchasable}\r\n                    ordered={this.purchaseHandler} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React, { Component } from 'react';\n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <BurgerBuilder />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}